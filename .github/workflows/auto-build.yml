name: Auto build Aseprite

on:
  schedule:
    - cron: '0 0 * * *'  # Chạy hàng ngày lúc 00:00 UTC
  push:
    branches: ["main"]

permissions:
  contents: write

jobs:
  version-check:
    name: Check Aseprite Version
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check-release.outputs.should_build }}
      latest_tag: ${{ steps.get-version.outputs.latest_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: Install Python requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Get latest Aseprite version
        id: get-version
        run: |
          python -c "import requests; response = requests.get('https://api.github.com/repos/aseprite/aseprite/releases'); releases = [r for r in response.json() if 'beta' not in r['tag_name'].lower()]; print(f'latest_tag={releases[0][\"tag_name\"]}')" >> $GITHUB_OUTPUT

      - name: Check existing release
        id: check-release
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ steps.get-version.outputs.latest_tag }})
          if [ $RESPONSE -eq 404 ]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi

  build-release:
    name: Build and Release
    needs: version-check
    if: needs.version-check.outputs.should_build == 'true'
    runs-on: windows-2022

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ninja
        run: choco install ninja -y

      - name: Download Aseprite
        run: |
          python download.py "${{ needs.version-check.outputs.latest_tag }}"

      - name: Setup MSVC
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64

      - name: Build Aseprite
        run: |
          mkdir build
          cd build
          cmake "../src/aseprite" -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel -DLAF_BACKEND=skia -DSKIA_DIR="../src/skia" -DSKIA_LIBRARY_DIR="../src/skia/out/Release-x64" -DSKIA_LIBRARY="../src/skia/out/Release-x64/skia.lib"
          ninja aseprite
          copy "C:/Windows/System32/libcrypto-1_1-x64.dll" ./bin

      - name: Zip binaries
        run: |
          cd build/bin
          7z a ../../Aseprite-Windows-x64-${{ needs.version-check.outputs.latest_tag }}.zip *
          
      - name: Upload Aseprite
        uses: actions/upload-artifact@v3
        with:
          name: Aseprite-Windows-x64-${{ steps.get_version.outputs.version }}
          path: Aseprite-Windows-x64-${{ steps.get_version.outputs.version }}.zip
          
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.version-check.outputs.latest_tag }}
          name: "Aseprite ${{ needs.version-check.outputs.latest_tag }}"
          body: "Auto-built version of Aseprite"
          files: |
            Aseprite-Windows-x64-${{ needs.version-check.outputs.latest_tag }}.zip
